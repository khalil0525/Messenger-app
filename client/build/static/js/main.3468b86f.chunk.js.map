{"version":3,"sources":["themes/theme.js","Access.js","pages/Signup.js","pages/Login.js","pages/ChangePassword.js","pages/EmailVerification.js","pages/RecoverPassword.js","components/Sidebar/ChatContent.js","components/Sidebar/CurrentUser.js","components/Sidebar/Search.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/Sidebar/Chat.js","components/Sidebar/BadgeAvatar.js","components/ActiveChat/SenderBubble.js","components/ActiveChat/OtherUserBubble.js","components/ActiveChat/ActiveChat.js","components/ActiveChat/Input.js","components/ActiveChat/Header.js","components/ActiveChat/Messages.js","context/socket.js","components/Home.js","components/SnackbarMessage.js","pages/Verify.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["theme","createTheme","typography","fontFamily","fontSize","button","textTransform","letterSpacing","fontWeight","overrides","MuiInput","input","palette","primary","main","secondary","useStyles","makeStyles","_bgBox","root","height","bgGrid","backgroundSize","backgroundImage","backgroundRepeat","backgroundPosition","bgBox","_defineProperty","breakpoints","down","display","up","text","color","maxWidth","marginTop","textAlign","Access","_ref","WrappedComponent","classes","_jsxs","Grid","container","className","children","_jsx","item","xs","sm","md","Box","width","src","alt","Typography","variant","headerContainer","alignItems","paddingTop","flexDirection","justifyContent","headerInner","padding","alignSelf","headerContent","contentContainer","margin","whiteSpace","marginRight","formBox","welcomeText","paddingBottom","Signup","user","register","history","useHistory","_useState","useState","_useState2","_slicedToArray","formErrorMessage","setFormErrorMessage","handleRegister","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","form","formElements","username","email","password","confirmPassword","wrap","_context","prev","next","preventDefault","currentTarget","elements","value","abrupt","stop","_x","apply","arguments","useEffect","id","active","push","Button","component","Link","to","onSubmit","spacing","FormControl","fullWidth","TextField","label","name","type","required","error","inputProps","minLength","FormHelperText","size","forgotPasswordLink","textDecoration","Login","login","isButtonDisabled","setIsButtonDisabled","handleLogin","t0","finish","href","disabled","MUILink","backgroundColor","background","default","marginBottom","borderRadius","paper","boxShadow","shadows","submitButton","statusText","ChangePassword","recoveryChangePassword","setPassword","_useState3","_useState4","setConfirmPassword","_useState5","_useState6","status","setStatus","location","useLocation","token","URLSearchParams","search","get","handlePasswordChange","setTimeout","onChange","e","target","resendButton","EmailVerification","resendVerification","verificationStatus","setVerificationStatus","handleResendVerification","direction","onClick","RecoverPassword","recoverPassword","setEmail","handlePasswordRecovery","marginLeft","flexGrow","previewText","boldPreviewText","badgeRoot","badgeInner","ChatContent","_conversation$message","_conversation$message2","conversation","otherUser","latestMessageText","hasUnreadMessages","messages","length","senderId","isRead","countUnreadMessages","useMemo","filter","message","concat","Badge","badgeContent","badge","subContainer","ellipsis","opacity","CurrentUser","BadgeAvatar","photoUrl","online","MoreHorizIcon","filledInput","Search","handleChange","hiddenLabel","FilledInput","disableUnderline","placeholder","startAdornment","InputAdornment","position","SearchIcon","paddingLeft","paddingRight","title","Sidebar","searchTerm","_ref$conversations","conversations","setActiveChat","includes","map","Chat","SidebarContainer","clearSearchedUsers","addSearchedUsers","setSearchTerm","searchUsers","_yield$axios$get","data","axios","sent","console","_ref3","_callee2","_context2","_x2","cursor","handleClick","sidebar","profilePic","border","UserAvatar","anchorOrigin","horizontal","vertical","overlap","Avatar","date","bubble","readAvatar","SenderBubble","time","isLastReadMessage","avatar","usernameDate","OtherUserBubble","chatContainer","ActiveChat","obj","activeConversation","postMessage","patchMessage","find","undefined","_Fragment","Header","Messages","userId","Input","conversationId","justifySelf","setText","handleSubmit","reqBody","recipientId","sender","content","statusDot","props","getLastReadMessageId","i","moment","createdAt","format","socket","io","on","log","SocketContext","React","createContext","Home","logout","useContext","setConversations","setActiveConversation","isLoggedIn","setIsLoggedIn","saveMessage","body","_yield$axios$post","post","saveMessageRead","_yield$axios$patch","patch","sendMessage","emit","readMessage","_ref4","_callee3","_context3","updateReadMessagesInConvo","_x3","useCallback","convo","convoCopy","_objectSpread","_toConsumableArray","slice","_ref5","_callee4","_context4","addMessageToConversation","addNewConvo","_x4","_data$sender","newConvo","addOnlineUser","removeOfflineUser","off","isFetching","fetchConversations","_ref6","_callee5","_context5","handleLogout","_ref7","_callee6","_context6","CssBaseline","users","currentUsers","forEach","newState","fakeConvo","snackbar","icon","success","SnackbarMessage","setSnackBarOpen","snackBarOpen","isError","Close","CheckCircleOutlineIcon","Snackbar","open","onClose","action","Fragment","ContentProps","successText","errorText","VerifySuccess","checkVerification","then","catch","withRouter","setUser","setMessage","setIsError","_useState7","_useState8","credentials","localStorage","setItem","response","_yield$axios$post2","newPassword","_x5","_yield$axios$post3","_x6","_x7","_callee7","_context7","delete","removeItem","_x8","fetchUser","_ref8","_callee8","_yield$axios$get2","_context8","Provider","SnackBarMessage","Switch","Route","path","render","Redirect","Verify","exact","interceptors","request","use","config","getItem","headers","App","MuiThemeProvider","BrowserRouter","Routes","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3468b86f.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createTheme({\r\n  typography: {\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontSize: 14,\r\n    button: {\r\n      textTransform: \"none\",\r\n      letterSpacing: 0,\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiInput: {\r\n      input: {\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: { main: \"#3A8DFF\" },\r\n    secondary: { main: \"#B0B0B0\" },\r\n  },\r\n});\r\n","import { Box, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  bgGrid: {\r\n    backgroundSize: \"cover\",\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  bgBox: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"flex\",\r\n    },\r\n\r\n    minHeight: \"100vh\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n\r\n    backgroundSize: \"cover\",\r\n    justifyContent: \"center\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg, rgb(58,141,255, 0.75) 0%, rgb(134,185,255, 0.75) 100%)\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  text: {\r\n    color: \"#ffffff\",\r\n    maxWidth: \"300px\",\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nconst Access = ({ WrappedComponent }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={false} sm={4} md={7} className={classes.bgGrid}>\r\n        <Box className={classes.bgBox}>\r\n          <img\r\n            width=\"67\"\r\n            src=\"https://res.cloudinary.com/dna1o7hrm/image/upload/v1612406581/r1hhd9ry5wxux0tqhju0.png\"\r\n            alt=\"chat bubble\"\r\n          />\r\n          <Typography variant=\"h4\" className={classes.text}>\r\n            Welcome to ChatApp\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5}>\r\n        {WrappedComponent}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Access;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    paddingTop: \"23px\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  headerInner: {\r\n    padding: \"8px\",\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  headerContent: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  text: {\r\n    color: \"#b0b0b0\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"400\",\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"21px\",\r\n  },\r\n  formBox: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcomeText: {\r\n    color: \"#000000\",\r\n    fontSize: \"26px\",\r\n    fontWeight: \"600\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n}));\r\n\r\nconst Signup = ({ user, register }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [formErrorMessage, setFormErrorMessage] = useState({});\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const formElements = form.elements;\r\n    const username = formElements.username.value;\r\n    const email = formElements.email.value;\r\n    const password = formElements.password.value;\r\n    const confirmPassword = formElements.confirmPassword.value;\r\n\r\n    if (password !== confirmPassword) {\r\n      setFormErrorMessage({ confirmPassword: \"Passwords must match\" });\r\n      return;\r\n    }\r\n    await register({ username, email, password });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && user.active) history.push(\"/home\");\r\n  }, [user, history]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && !user.active) history.push(\"/\");\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Box>\r\n        <Box container className={classes.headerContainer}>\r\n          <Box className={classes.headerInner}>\r\n            <Box className={classes.headerContent}>\r\n              <Typography variant=\"body1\" className={classes.text}>\r\n                Need to log in?\r\n              </Typography>\r\n              <Button component={Link} to=\"/login\">\r\n                Login\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box className={classes.contentContainer}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.formBox}\r\n          >\r\n            <Typography variant=\"h4\" className={classes.welcomeText}>\r\n              Register your account\r\n            </Typography>\r\n            <form onSubmit={handleRegister} className={classes.form}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      aria-label=\"username\"\r\n                      label=\"Username\"\r\n                      name=\"username\"\r\n                      type=\"text\"\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      label=\"E-mail address\"\r\n                      aria-label=\"e-mail address\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl\r\n                    error={!!formErrorMessage.confirmPassword}\r\n                    fullWidth\r\n                  >\r\n                    <TextField\r\n                      aria-label=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      inputProps={{ minLength: 6 }}\r\n                      name=\"password\"\r\n                      required\r\n                    />\r\n                    <FormHelperText>\r\n                      {formErrorMessage.confirmPassword}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl\r\n                    error={!!formErrorMessage.confirmPassword}\r\n                    fullWidth\r\n                  >\r\n                    <TextField\r\n                      label=\"Confirm Password\"\r\n                      aria-label=\"confirm password\"\r\n                      type=\"password\"\r\n                      inputProps={{ minLength: 6 }}\r\n                      name=\"confirmPassword\"\r\n                      required\r\n                    />\r\n                    <FormHelperText>\r\n                      {formErrorMessage.confirmPassword}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n  Link as MUILink,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    paddingTop: \"23px\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  headerInner: {\r\n    padding: \"8px\",\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  headerContent: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  text: {\r\n    color: \"#b0b0b0\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"400\",\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"21px\",\r\n  },\r\n  formBox: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcomeText: {\r\n    color: \"#000000\",\r\n    fontSize: \"26px\",\r\n    fontWeight: \"600\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  forgotPasswordLink: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\", // Remove underline\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\", // Add underline on hover\r\n    },\r\n  },\r\n}));\r\n\r\nconst Login = ({ user, login }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false); // New state for button disabling\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const formElements = form.elements;\r\n    const username = formElements.username.value;\r\n    const password = formElements.password.value;\r\n\r\n    setIsButtonDisabled(true); // Disable the button while waiting for the response\r\n\r\n    try {\r\n      await login({ username, password });\r\n    } catch (error) {\r\n      // Handle the error, if needed\r\n    } finally {\r\n      setIsButtonDisabled(false); // Enable the button after the API response\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (user && user.id && user.active) history.push(\"/home\");\r\n  }, [user, history]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && !user.active) history.push(\"/\");\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Box>\r\n        <Box container item className={classes.headerContainer}>\r\n          <Box className={classes.headerInner}>\r\n            <Box className={classes.headerContent}>\r\n              <Typography variant=\"body1\" className={classes.text}>\r\n                Need to register?\r\n              </Typography>\r\n              <Link href=\"/register\" to=\"/register\">\r\n                <Button>Register</Button>\r\n              </Link>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box className={classes.contentContainer}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.formBox}\r\n          >\r\n            <Typography variant=\"h4\" className={classes.welcomeText}>\r\n              Welcome Back!\r\n            </Typography>\r\n\r\n            <form onSubmit={handleLogin} className={classes.form}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl margin=\"normal\" required fullWidth>\r\n                    <TextField\r\n                      aria-label=\"username\"\r\n                      label=\"Username\"\r\n                      name=\"username\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl margin=\"normal\" required fullWidth>\r\n                    <TextField\r\n                      label=\"Password\"\r\n                      aria-label=\"password\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disabled={isButtonDisabled}\r\n                    fullWidth\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <MUILink\r\n                    component={Link}\r\n                    to=\"/password-recovery\"\r\n                    className={classes.forgotPasswordLink}\r\n                  >\r\n                    Forgot your password?\r\n                  </MUILink>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcomeText: {\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"26px\",\r\n    fontWeight: \"600\",\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    maxWidth: \"400px\",\r\n    padding: theme.spacing(3),\r\n    borderRadius: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[3],\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  statusText: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nconst ChangePassword = ({ recoveryChangePassword }) => {\r\n  const classes = useStyles();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const location = useLocation();\r\n  const token = new URLSearchParams(location.search).get(\"token\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handlePasswordChange = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setStatus(\"Passwords do not match. Please try again.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await recoveryChangePassword(token, password);\r\n      setStatus(\"Password changed successfully.\");\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 3000); // Redirect after 3 seconds\r\n    } catch (error) {\r\n      setStatus(\"Failed to change password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <div className={classes.form}>\r\n        <Typography variant=\"h4\" className={classes.welcomeText}>\r\n          Change Password\r\n        </Typography>\r\n        <form onSubmit={handlePasswordChange}>\r\n          <FormControl margin=\"normal\" required>\r\n            <TextField\r\n              label=\"New Password\"\r\n              aria-label=\"new-password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              aria-label=\"confirm-password\"\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submitButton}\r\n            fullWidth\r\n          >\r\n            Change Password\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body2\" className={classes.statusText}>\r\n          {status}\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Grid, Box, Typography, Button, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcomeText: {\r\n    color: \"#000000\",\r\n    fontSize: \"26px\",\r\n    fontWeight: \"600\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  resendButton: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EmailVerification = ({ user, resendVerification }) => {\r\n  const classes = useStyles();\r\n\r\n  const [verificationStatus, setVerificationStatus] = useState(\"\");\r\n\r\n  const handleResendVerification = async () => {\r\n    try {\r\n      await resendVerification(user); // Implement this function to send a new verification link\r\n      setVerificationStatus(\"Verification link resent! Check your email.\");\r\n    } catch (error) {\r\n      setVerificationStatus(\"Failed to resend verification link.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Box className={classes.contentContainer}>\r\n        <Grid container justifyContent=\"center\" direction=\"column\">\r\n          <Typography variant=\"body1\" className={classes.welcomeText}>\r\n            You must verify your email to access the application.\r\n          </Typography>\r\n          <Typography variant=\"body2\">{verificationStatus}</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.resendButton}\r\n            onClick={handleResendVerification}\r\n          >\r\n            Resend Verification Link\r\n          </Button>\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EmailVerification;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  makeStyles,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    paddingTop: \"23px\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  headerInner: {\r\n    padding: \"8px\",\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  headerContent: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  text: {\r\n    color: \"#b0b0b0\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"400\",\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"21px\",\r\n  },\r\n  formBox: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  welcomeText: {\r\n    color: \"#000000\",\r\n    fontSize: \"26px\",\r\n    fontWeight: \"600\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n\r\n  statusText: {\r\n    marginTop: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nconst RecoverPassword = ({ recoverPassword }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const history = useHistory();\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false); // New state for button disabling\r\n\r\n  const handlePasswordRecovery = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setIsButtonDisabled(true); // Disable the button while waiting for the API response\r\n\r\n    try {\r\n      await recoverPassword(email);\r\n      setStatus(\"Password recovery instructions sent to your email.\");\r\n      setTimeout(() => {\r\n        history.push(\"/login\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      setStatus(\"Failed to initiate password recovery.\");\r\n    } finally {\r\n      setIsButtonDisabled(false); // Enable the button after API response\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Box>\r\n        <Box container className={classes.headerContainer}>\r\n          <Box className={classes.headerInner}>\r\n            <Box className={classes.headerContent}>\r\n              <Typography variant=\"body1\" className={classes.text}>\r\n                Need to log in?\r\n              </Typography>\r\n              <Button component={Link} to=\"/login\">\r\n                Login\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box className={classes.contentContainer}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.formBox}\r\n          >\r\n            <Typography variant=\"h4\" className={classes.welcomeText}>\r\n              Recover Password\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handlePasswordRecovery}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth margin=\"normal\" required>\r\n                    <TextField\r\n                      label=\"Email\"\r\n                      aria-label=\"email\"\r\n                      type=\"email\"\r\n                      variant=\"outlined\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                    disabled={isButtonDisabled}\r\n                  >\r\n                    Send Recovery Email\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n          <Typography variant=\"body2\" className={classes.statusText}>\r\n            {status}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RecoverPassword;\r\n","import React, { useMemo } from \"react\";\r\nimport { Box, Typography, Badge } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: 20,\r\n    flexGrow: 1,\r\n  },\r\n  username: {\r\n    fontWeight: \"bold\",\r\n    letterSpacing: -0.2,\r\n  },\r\n  previewText: {\r\n    fontSize: 12,\r\n    color: \"#9CADC8\",\r\n    letterSpacing: -0.17,\r\n  },\r\n  boldPreviewText: {\r\n    color: \"black\",\r\n    fontWeight: \"600\",\r\n  },\r\n  badgeRoot: {\r\n    alignSelf: \"center\",\r\n    marginRight: 40,\r\n  },\r\n  badgeInner: {\r\n    backgroundColor: \"#3F92FF\",\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst ChatContent = ({ conversation }) => {\r\n  const classes = useStyles();\r\n\r\n  const { otherUser } = conversation;\r\n  const latestMessageText = conversation.id && conversation.latestMessageText;\r\n\r\n  const hasUnreadMessages =\r\n    conversation.messages[conversation.messages.length - 1]?.senderId ===\r\n      otherUser.id &&\r\n    !conversation.messages[conversation.messages.length - 1]?.isRead;\r\n\r\n  const countUnreadMessages = useMemo(() => {\r\n    if (hasUnreadMessages) {\r\n      return conversation.messages.filter((message) => !message.isRead).length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }, [conversation.messages, hasUnreadMessages]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box>\r\n        <Typography className={classes.username}>\r\n          {otherUser.username}\r\n        </Typography>\r\n        <Typography\r\n          className={`${hasUnreadMessages && classes.boldPreviewText} ${\r\n            classes.previewText\r\n          }`}\r\n        >\r\n          {latestMessageText}\r\n        </Typography>\r\n      </Box>\r\n      <Badge\r\n        badgeContent={countUnreadMessages}\r\n        classes={{ root: classes.badgeRoot, badge: classes.badgeInner }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BadgeAvatar } from \"./index\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: 44,\r\n    marginTop: 23,\r\n    marginLeft: 6,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  subContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n  },\r\n  username: {\r\n    letterSpacing: -0.23,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 17,\r\n  },\r\n  ellipsis: {\r\n    color: \"#95A7C4\",\r\n    marginRight: 24,\r\n    opacity: 0.5,\r\n  },\r\n}));\r\n\r\nconst CurrentUser = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <BadgeAvatar photoUrl={user?.photoUrl} online={true} />\r\n      <Box className={classes.subContainer}>\r\n        <Typography className={classes.username}>{user?.username}</Typography>\r\n        <MoreHorizIcon classes={{ root: classes.ellipsis }} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentUser;\r\n","import React from \"react\";\r\nimport { FormControl, FilledInput, InputAdornment } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  filledInput: {\r\n    height: 50,\r\n    background: \"#E9EEF9\",\r\n    borderRadius: 5,\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n    color: \"#99A9C4\",\r\n    letterSpacing: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    \"&::placeholder\": {\r\n      color: \"#ADC0DE\",\r\n      opacity: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Search = ({ handleChange }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl fullWidth hiddenLabel>\r\n        <FilledInput\r\n          name=\"search\"\r\n          onChange={handleChange}\r\n          classes={{ root: classes.filledInput, input: classes.input }}\r\n          disableUnderline\r\n          placeholder=\"Search\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          }\r\n        ></FilledInput>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Search, Chat, CurrentUser } from \"./index\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingLeft: 21,\r\n    paddingRight: 21,\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    letterSpacing: -0.29,\r\n    fontWeight: \"bold\",\r\n    marginTop: 32,\r\n    marginBottom: 15,\r\n  },\r\n}));\r\n\r\nconst Sidebar = ({\r\n  handleChange,\r\n  searchTerm,\r\n  conversations = [],\r\n  user,\r\n  setActiveChat,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CurrentUser user={user} />\r\n      <Typography className={classes.title}>Chats</Typography>\r\n      <Search handleChange={handleChange} />\r\n      {conversations\r\n        .filter((conversation) =>\r\n          conversation.otherUser.username.includes(searchTerm)\r\n        )\r\n        .map((conversation) => {\r\n          return (\r\n            <Chat\r\n              conversation={conversation}\r\n              key={conversation.otherUser.username}\r\n              setActiveChat={setActiveChat}\r\n            />\r\n          );\r\n        })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport { Sidebar } from \"./index\";\r\nimport axios from \"axios\";\r\n\r\nconst SidebarContainer = ({\r\n  conversations,\r\n  user,\r\n  clearSearchedUsers,\r\n  addSearchedUsers,\r\n  setActiveChat,\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const searchUsers = async (searchTerm) => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `https://kc-chat-app-api.herokuapp.com/api/users/${searchTerm}`\r\n      );\r\n      addSearchedUsers(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (event) => {\r\n    if (event.target.value === \"\") {\r\n      // clear searched convos\r\n      clearSearchedUsers();\r\n      setSearchTerm(\"\");\r\n      return;\r\n    }\r\n    if (searchTerm.includes(event.target.value)) {\r\n      // if new value is included in search term, we don't need to make another API call, just need to set the search term value so the conversations can be filtered in the rendering\r\n      setSearchTerm(event.target.value);\r\n      return;\r\n    }\r\n    await searchUsers(event.target.value);\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      handleChange={handleChange}\r\n      searchTerm={searchTerm}\r\n      conversations={conversations}\r\n      user={user}\r\n      setActiveChat={setActiveChat}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SidebarContainer;\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { BadgeAvatar, ChatContent } from \"../Sidebar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 8,\r\n    height: 80,\r\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover\": {\r\n      cursor: \"grab\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Chat = ({ conversation, setActiveChat }) => {\r\n  const classes = useStyles();\r\n  const { otherUser } = conversation;\r\n\r\n  const handleClick = async (conversation) => {\r\n    await setActiveChat(conversation.otherUser.username);\r\n  };\r\n\r\n  return (\r\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\r\n      <BadgeAvatar\r\n        photoUrl={otherUser.photoUrl}\r\n        username={otherUser.username}\r\n        online={otherUser.online}\r\n        sidebar={true}\r\n      />\r\n      <ChatContent conversation={conversation} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Box, Badge, Avatar } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  profilePic: {\r\n    height: 44,\r\n    width: 44,\r\n  },\r\n  badge: {\r\n    height: 13,\r\n    width: 13,\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid white\",\r\n    backgroundColor: \"#D0DAE9\",\r\n  },\r\n  online: {\r\n    backgroundColor: \"#1CED84\",\r\n  },\r\n  sidebar: {\r\n    marginLeft: 17,\r\n  },\r\n}));\r\n\r\nconst UserAvatar = ({ sidebar, username, photoUrl, online }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={sidebar ? classes.sidebar : \"\"}>\r\n      <Badge\r\n        classes={{ badge: `${classes.badge} ${online && classes.online}` }}\r\n        variant=\"dot\"\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n        overlap=\"circular\"\r\n      >\r\n        <Avatar alt={username} src={photoUrl} className={classes.profilePic} />\r\n      </Badge>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  date: {\r\n    fontSize: 11,\r\n    color: \"#BECCE2\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: \"#91A3C0\",\r\n    letterSpacing: -0.2,\r\n    padding: 8,\r\n    fontWeight: \"bold\",\r\n  },\r\n  bubble: {\r\n    background: \"#F4F6FA\",\r\n    borderRadius: \"10px 10px 0 10px\",\r\n  },\r\n  readAvatar: {\r\n    height: 20,\r\n    width: 20,\r\n    marginTop: 9,\r\n  },\r\n}));\r\n\r\nconst SenderBubble = ({ time, text, otherUser, isLastReadMessage }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography className={classes.date}>{time}</Typography>\r\n      <Box className={classes.bubble}>\r\n        <Typography className={classes.text}>{text}</Typography>\r\n      </Box>\r\n      {isLastReadMessage && (\r\n        <Avatar\r\n          alt={otherUser.username}\r\n          src={otherUser.photoUrl}\r\n          className={classes.readAvatar}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SenderBubble;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    height: 30,\r\n    width: 30,\r\n    marginRight: 11,\r\n    marginTop: 6,\r\n  },\r\n  usernameDate: {\r\n    fontSize: 11,\r\n    color: \"#BECCE2\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  bubble: {\r\n    backgroundImage: \"linear-gradient(225deg, #6CC1FF 0%, #3A8DFF 100%)\",\r\n    borderRadius: \"0 10px 10px 10px\",\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    color: \"#FFFFFF\",\r\n    letterSpacing: -0.2,\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nconst OtherUserBubble = ({ text, time, otherUser }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Avatar\r\n        alt={otherUser.username}\r\n        src={otherUser.photoUrl}\r\n        className={classes.avatar}\r\n      />\r\n      <Box>\r\n        <Typography className={classes.usernameDate}>\r\n          {otherUser.username} {time}\r\n        </Typography>\r\n        <Box className={classes.bubble}>\r\n          <Typography className={classes.text}>{text}</Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OtherUserBubble;\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Input, Header, Messages } from \"./index\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 8,\r\n    flexDirection: \"column\",\r\n  },\r\n  chatContainer: {\r\n    marginLeft: 41,\r\n    marginRight: 41,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst ActiveChat = ({\r\n  user,\r\n  conversations,\r\n  activeConversation,\r\n  postMessage,\r\n  patchMessage,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const conversation = useMemo(() => {\r\n    return conversations\r\n      ? conversations.find(\r\n          (conversation) =>\r\n            conversation.otherUser.username === activeConversation\r\n        )\r\n      : {};\r\n  }, [conversations, activeConversation]);\r\n\r\n  const isConversation = (obj) => {\r\n    return obj !== {} && obj !== undefined;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { senderId, isRead } =\r\n      conversation?.messages[conversation.messages.length - 1] || {};\r\n    if (\r\n      conversation &&\r\n      conversation.otherUser &&\r\n      senderId === conversation.otherUser.id &&\r\n      !isRead\r\n    ) {\r\n      patchMessage(senderId);\r\n    }\r\n  }, [conversation, patchMessage]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {isConversation(conversation) && conversation.otherUser && (\r\n        <>\r\n          <Header\r\n            username={conversation.otherUser.username}\r\n            online={conversation.otherUser.online || false}\r\n          />\r\n          <Box className={classes.chatContainer}>\r\n            {user && (\r\n              <>\r\n                <Messages\r\n                  messages={conversation.messages}\r\n                  otherUser={conversation.otherUser}\r\n                  userId={user.id}\r\n                />\r\n                <Input\r\n                  otherUser={conversation.otherUser}\r\n                  conversationId={conversation.id || null}\r\n                  user={user}\r\n                  postMessage={postMessage}\r\n                />\r\n              </>\r\n            )}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActiveChat;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, FilledInput } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    justifySelf: \"flex-end\",\r\n    marginTop: 15,\r\n  },\r\n  input: {\r\n    height: 70,\r\n    backgroundColor: \"#F4F6FA\",\r\n    borderRadius: 8,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nconst Input = ({ otherUser, conversationId, user, postMessage }) => {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const formElements = form.elements;\r\n    // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\r\n    const reqBody = {\r\n      text: formElements.text.value,\r\n      recipientId: otherUser.id,\r\n      conversationId,\r\n      sender: conversationId ? null : user,\r\n    };\r\n    await postMessage(reqBody);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <FormControl fullWidth hiddenLabel>\r\n        <FilledInput\r\n          classes={{ root: classes.input }}\r\n          disableUnderline\r\n          placeholder=\"Type something...\"\r\n          value={text}\r\n          name=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    height: 89,\r\n    marginBottom: 34,\r\n    boxShadow: \"0 2px 20px 0 rgba(88,133,196,0.10)\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: 24,\r\n  },\r\n  username: {\r\n    fontSize: 20,\r\n    letterSpacing: -0.29,\r\n    fontWeight: \"bold\",\r\n    marginRight: 14,\r\n  },\r\n  statusText: {\r\n    fontSize: 12,\r\n    color: \"#BFC9DB\",\r\n    letterSpacing: -0.17,\r\n  },\r\n  statusDot: {\r\n    height: 8,\r\n    width: 8,\r\n    borderRadius: \"50%\",\r\n    marginRight: 5,\r\n    backgroundColor: \"#D0DAE9\",\r\n  },\r\n  online: {\r\n    background: \"#1CED84\",\r\n  },\r\n  ellipsis: {\r\n    color: \"#95A7C4\",\r\n    marginRight: 24,\r\n    opacity: 0.5,\r\n  },\r\n}));\r\n\r\nconst Header = ({ username, online }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.content}>\r\n        <Typography className={classes.username}>{username}</Typography>\r\n        <Box className={`${classes.statusDot} ${online && classes.online}`} />\r\n        <Typography className={classes.statusText}>\r\n          {online ? \"Online\" : \"Offline\"}\r\n        </Typography>\r\n      </Box>\r\n      <MoreHorizIcon classes={{ root: classes.ellipsis }} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useMemo } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { SenderBubble, OtherUserBubble } from \".\";\r\nimport moment from \"moment\";\r\n\r\nconst Messages = (props) => {\r\n  const { messages, otherUser, userId } = props;\r\n\r\n  const getLastReadMessageId = useMemo(() => {\r\n    for (let i = messages.length - 1; i >= 0; i--) {\r\n      if (messages[i].isRead && messages[i].senderId === userId) {\r\n        return messages[i].id;\r\n      }\r\n    }\r\n    return 0;\r\n  }, [messages, userId]);\r\n\r\n  return (\r\n    <Box>\r\n      {messages.map((message) => {\r\n        const time = moment(message.createdAt).format(\"h:mm\");\r\n\r\n        return message.senderId === userId ? (\r\n          <SenderBubble\r\n            key={message.id}\r\n            text={message.text}\r\n            time={time}\r\n            otherUser={otherUser}\r\n            isLastReadMessage={getLastReadMessageId === message.id}\r\n          />\r\n        ) : (\r\n          <OtherUserBubble\r\n            key={message.id}\r\n            text={message.text}\r\n            time={time}\r\n            otherUser={otherUser}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { io } from \"socket.io-client\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const socket = io(\"http://localhost:5000\");\r\nsocket.on(\"connect\", () => {\r\n  console.log(\"connected to server\");\r\n});\r\nexport const SocketContext = React.createContext();\r\n","import React, { useCallback, useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, CssBaseline, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { SidebarContainer } from \"../components/Sidebar\";\r\nimport { ActiveChat } from \"../components/ActiveChat\";\r\nimport { SocketContext } from \"../context/socket\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n}));\r\n\r\nconst Home = ({ user, logout }) => {\r\n  const history = useHistory();\r\n\r\n  const socket = useContext(SocketContext);\r\n\r\n  const [conversations, setConversations] = useState([]);\r\n  const [activeConversation, setActiveConversation] = useState(null);\r\n\r\n  const classes = useStyles();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const addSearchedUsers = (users) => {\r\n    const currentUsers = {};\r\n\r\n    // make table of current users so we can lookup faster\r\n    conversations.forEach((convo) => {\r\n      currentUsers[convo.otherUser.id] = true;\r\n    });\r\n\r\n    const newState = [...conversations];\r\n    users.forEach((user) => {\r\n      // only create a fake convo if we don't already have a convo with this user\r\n      if (!currentUsers[user.id]) {\r\n        let fakeConvo = { otherUser: user, messages: [] };\r\n        newState.push(fakeConvo);\r\n      }\r\n    });\r\n\r\n    setConversations(newState);\r\n  };\r\n\r\n  const clearSearchedUsers = () => {\r\n    setConversations((prev) => prev.filter((convo) => convo.id));\r\n  };\r\n\r\n  const saveMessage = async (body) => {\r\n    const { data } = await axios.post(\r\n      \"https://kc-chat-app-api.herokuapp.com/api/messages\",\r\n      body\r\n    );\r\n    return data;\r\n  };\r\n  const saveMessageRead = async (senderId) => {\r\n    const { data } = await axios.patch(\r\n      `https://kc-chat-app-api.herokuapp.com/api/messages/read/${senderId}`\r\n    );\r\n    return data;\r\n  };\r\n\r\n  const sendMessage = (data, body) => {\r\n    socket.emit(\"new-message\", {\r\n      message: data.message,\r\n      recipientId: body.recipientId,\r\n      sender: data.sender,\r\n    });\r\n  };\r\n  const readMessage = (data) => {\r\n    socket.emit(\"read-messages\", {\r\n      messages: data.messages,\r\n      recipientId: data.userId,\r\n      sender: data.senderId,\r\n    });\r\n  };\r\n  const patchMessage = async (senderId) => {\r\n    try {\r\n      const data = await saveMessageRead(senderId);\r\n      updateReadMessagesInConvo(data);\r\n      readMessage(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const updateReadMessagesInConvo = useCallback((data) => {\r\n    const { messages } = data;\r\n    const { conversationId } = messages[0];\r\n    setConversations((prev) =>\r\n      prev.map((convo) => {\r\n        if (convo.id === conversationId) {\r\n          const convoCopy = { ...convo };\r\n          convoCopy.messages = [\r\n            ...convoCopy.messages.slice(\r\n              0,\r\n              convoCopy.messages.length - messages.length\r\n            ),\r\n            ...messages,\r\n          ];\r\n          return convoCopy;\r\n        } else {\r\n          return convo;\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const postMessage = async (body) => {\r\n    try {\r\n      const data = await saveMessage(body);\r\n      if (!body.conversationId) {\r\n        addNewConvo(body.recipientId, data.message);\r\n      } else {\r\n        addMessageToConversation(data);\r\n      }\r\n\r\n      sendMessage(data, body);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const addNewConvo = useCallback((recipientId, message) => {\r\n    setConversations((prev) =>\r\n      prev.map((convo) => {\r\n        if (convo.otherUser.id === recipientId) {\r\n          const convoCopy = { ...convo };\r\n          convoCopy.messages = [message];\r\n          convoCopy.latestMessageText = message.text;\r\n          convoCopy.id = message.conversationId;\r\n          return convoCopy;\r\n        } else {\r\n          return convo;\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const addMessageToConversation = useCallback((data) => {\r\n    // if sender isn't null, that means the message needs to be put in a brand new convo\r\n\r\n    const { message, sender = null } = data;\r\n    if (sender !== null) {\r\n      const newConvo = {\r\n        id: message.conversationId,\r\n        otherUser: sender,\r\n        messages: [message],\r\n        latestMessageText: message.text,\r\n      };\r\n\r\n      setConversations((prev) => [newConvo, ...prev]);\r\n    } else {\r\n      setConversations((prev) =>\r\n        prev.map((convo) => {\r\n          if (convo.id === message.conversationId) {\r\n            const convoCopy = { ...convo };\r\n            convoCopy.messages = [...convoCopy.messages, message];\r\n            convoCopy.latestMessageText = message.text;\r\n            return convoCopy;\r\n          } else {\r\n            return convo;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const setActiveChat = (username) => {\r\n    setActiveConversation(username);\r\n  };\r\n\r\n  const addOnlineUser = useCallback((id) => {\r\n    setConversations((prev) =>\r\n      prev.map((convo) => {\r\n        if (convo.otherUser.id === id) {\r\n          const convoCopy = { ...convo };\r\n          convoCopy.otherUser = { ...convoCopy.otherUser, online: true };\r\n          return convoCopy;\r\n        } else {\r\n          return convo;\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const removeOfflineUser = useCallback((id) => {\r\n    setConversations((prev) =>\r\n      prev.map((convo) => {\r\n        if (convo.otherUser.id === id) {\r\n          const convoCopy = { ...convo };\r\n          convoCopy.otherUser = { ...convoCopy.otherUser, online: false };\r\n          return convoCopy;\r\n        } else {\r\n          return convo;\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  // Lifecycle\r\n\r\n  useEffect(() => {\r\n    // Socket init\r\n    socket.on(\"add-online-user\", addOnlineUser);\r\n    socket.on(\"remove-offline-user\", removeOfflineUser);\r\n    socket.on(\"new-message\", addMessageToConversation);\r\n    socket.on(\"read-messages\", updateReadMessagesInConvo);\r\n    return () => {\r\n      // before the component is destroyed\r\n      // unbind all event handlers used in this component\r\n      socket.off(\"add-online-user\", addOnlineUser);\r\n      socket.off(\"remove-offline-user\", removeOfflineUser);\r\n      socket.off(\"new-message\", addMessageToConversation);\r\n      socket.off(\"read-messages\", updateReadMessagesInConvo);\r\n    };\r\n  }, [\r\n    addMessageToConversation,\r\n    updateReadMessagesInConvo,\r\n    addOnlineUser,\r\n    removeOfflineUser,\r\n    socket,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // when fetching, prevent redirect\r\n    if (user?.isFetching) return;\r\n\r\n    if (user && user.id) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      // If we were previously logged in, redirect to login instead of register\r\n      if (isLoggedIn) history.push(\"/login\");\r\n      else history.push(\"/register\");\r\n    }\r\n  }, [user, history, isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          \"https://kc-chat-app-api.herokuapp.com/api/conversations\"\r\n        );\r\n        setConversations(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    if (!user.isFetching) {\r\n      fetchConversations();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleLogout = async () => {\r\n    if (user && user.id) {\r\n      await logout(user.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleLogout}>Logout</Button>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <SidebarContainer\r\n          conversations={conversations}\r\n          user={user}\r\n          clearSearchedUsers={clearSearchedUsers}\r\n          addSearchedUsers={addSearchedUsers}\r\n          setActiveChat={setActiveChat}\r\n        />\r\n        <ActiveChat\r\n          activeConversation={activeConversation}\r\n          conversations={conversations}\r\n          user={user}\r\n          postMessage={postMessage}\r\n          patchMessage={patchMessage}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Button, Snackbar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  snackbar: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n  success: {\r\n    backgroundColor: \"green\",\r\n  },\r\n  error: {\r\n    backgroundColor: \"red\",\r\n  },\r\n}));\r\n\r\nconst SnackbarMessage = ({\r\n  setSnackBarOpen,\r\n  message,\r\n  snackBarOpen,\r\n  isError,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const icon = isError ? (\r\n    <Close color=\"secondary\" />\r\n  ) : (\r\n    <CheckCircleOutlineIcon />\r\n  );\r\n\r\n  return (\r\n    <Snackbar\r\n      open={snackBarOpen}\r\n      onClose={() => setSnackBarOpen(false)}\r\n      message={message || \"An error occurred. Please try again.\"}\r\n      action={\r\n        <React.Fragment>\r\n          <Button\r\n            className={classes.icon}\r\n            size=\"small\"\r\n            onClick={() => setSnackBarOpen(false)}\r\n          >\r\n            {icon}\r\n          </Button>\r\n        </React.Fragment>\r\n      }\r\n      ContentProps={{\r\n        classes: {\r\n          root: isError ? classes.error : classes.success,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarMessage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Box, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n    margin: \"64px 32px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  successText: {\r\n    color: \"#000000\",\r\n    fontSize: \"26px\",\r\n    fontWeight: \"600\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    fontSize: \"18px\",\r\n    paddingBottom: \"20px\",\r\n  },\r\n}));\r\n\r\nconst VerifySuccess = ({ checkVerification }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  const [verificationStatus, setVerificationStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!location.search) {\r\n      history.push(\"/\");\r\n    } else {\r\n      const token = new URLSearchParams(location.search).get(\"token\");\r\n      if (!token) {\r\n        history.push(\"/\");\r\n      } else {\r\n        checkVerification(token)\r\n          .then(() => {\r\n            setVerificationStatus(\"success\");\r\n            setTimeout(() => {\r\n              history.push(\"/\");\r\n            }, 5000); // Redirect after 5 seconds\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            setVerificationStatus(\"error\");\r\n            setTimeout(() => {\r\n              history.push(\"/\");\r\n            }, 5000); // Redirect after 5 seconds\r\n          });\r\n      }\r\n    }\r\n  }, [history, location.search, checkVerification]);\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Box className={classes.contentContainer}>\r\n        <Grid container justifyContent=\"center\" direction=\"column\">\r\n          {verificationStatus === \"success\" ? (\r\n            <>\r\n              <Typography variant=\"body1\" className={classes.successText}>\r\n                Thank you, your account has been verified!\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                You will be redirected to the home page shortly.\r\n              </Typography>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"body1\" className={classes.errorText}>\r\n                Email verification failed.\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                You will be redirected to the home page shortly.\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VerifySuccess;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport Access from \"./Access.js\";\r\nimport Signup from \"./pages/Signup.js\";\r\nimport Login from \"./pages/Login.js\";\r\nimport ChangePassword from \"./pages/ChangePassword.js\";\r\nimport EmailVerification from \"./pages/EmailVerification.js\";\r\nimport RecoverPassword from \"./pages/RecoverPassword.js\";\r\nimport { SnackBarMessage, Home } from \"./components\";\r\nimport { SocketContext, socket } from \"./context/socket\";\r\nimport Verify from \"./pages/Verify.js\";\r\n\r\nconst Routes = (props) => {\r\n  const [user, setUser] = useState({\r\n    isFetching: true,\r\n  });\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://localhost:5000/auth/login\",\r\n        credentials\r\n      );\r\n      await localStorage.setItem(\"messenger-token\", data.token);\r\n      setUser(data);\r\n      socket.emit(\"go-online\", data.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUser({ error: error.response.data.error || \"Server Error\" });\r\n    }\r\n  };\r\n\r\n  const register = async (credentials) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://localhost:5000/auth/register\",\r\n        credentials\r\n      );\r\n\r\n      await localStorage.setItem(\"messenger-token\", data.token);\r\n      setUser(data);\r\n      socket.emit(\"go-online\", data.id);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUser({ error: error.response.data.error || \"Server Error\" });\r\n    }\r\n  };\r\n\r\n  const recoverPassword = async (email) => {\r\n    try {\r\n      await axios.post(\"http://localhost:5000/auth/password/recover\", {\r\n        email,\r\n      });\r\n\r\n      setMessage(\"Recovery email sent!\");\r\n\r\n      setIsError(false);\r\n      setSnackBarOpen(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const recoveryChangePassword = async (token, password) => {\r\n    try {\r\n      await axios.post(`http://localhost:5000/auth/password/set/${token}`, {\r\n        newPassword: password,\r\n      });\r\n      setMessage(\"Password changed successfully\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const resendVerification = async (user) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        `http://localhost:5000/auth/verify/resend`,\r\n        { user }\r\n      );\r\n      console.log(data);\r\n\r\n      setMessage(\"Verification resent!\");\r\n\r\n      setIsError(false);\r\n      setSnackBarOpen(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const checkVerification = async (token) => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:5000/auth/verify?token=${token}`\r\n      );\r\n      await localStorage.setItem(\"messenger-token\", data.token);\r\n      setUser(data);\r\n      setMessage(\"Email verified successfully!\");\r\n      setIsError(false);\r\n      setSnackBarOpen(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage(\"Email verification failed. Please try again.\");\r\n      setIsError(true);\r\n      setSnackBarOpen(true);\r\n    }\r\n  };\r\n  const logout = async (id) => {\r\n    try {\r\n      await axios.delete(\"http://localhost:5000/auth/logout\");\r\n      await localStorage.removeItem(\"messenger-token\");\r\n      setUser({});\r\n      socket.emit(\"logout\", id);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Lifecycle\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setUser((prev) => ({ ...prev, isFetching: true }));\r\n      try {\r\n        const { data } = await axios.get(\"http://localhost:5000/auth/user\");\r\n        setUser(data);\r\n        if (data.id) {\r\n          socket.emit(\"go-online\", data.id);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        setUser((prev) => ({ ...prev, isFetching: false }));\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user?.error) {\r\n      // check to make sure error is what we expect, in case we get an unexpected server error object\r\n      if (typeof user.error === \"string\") {\r\n        setMessage(user.error);\r\n      } else {\r\n        setMessage(\"Internal Server Error. Please try again\");\r\n      }\r\n      setIsError(true);\r\n      setSnackBarOpen(true);\r\n    }\r\n  }, [user?.error]);\r\n\r\n  if (user?.isFetching) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  console.log(user);\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {snackBarOpen && (\r\n        <SnackBarMessage // Updated component name\r\n          setSnackBarOpen={setSnackBarOpen}\r\n          message={message}\r\n          snackBarOpen={snackBarOpen}\r\n          isError={isError} // Set this based on whether it's an error message\r\n        />\r\n      )}\r\n\r\n      <Switch>\r\n        <Route\r\n          path=\"/login\"\r\n          render={() => (\r\n            <Access WrappedComponent={<Login user={user} login={login} />} />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/register\"\r\n          render={() => (\r\n            <Access\r\n              WrappedComponent={<Signup user={user} register={register} />}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/verify\"\r\n          render={() =>\r\n            user && user?.id && !user?.active ? (\r\n              <Verify checkVerification={checkVerification} />\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path=\"/password-recovery\"\r\n          render={() =>\r\n            user?.id && user?.active ? (\r\n              <Redirect to=\"/home\" />\r\n            ) : (\r\n              <Access\r\n                WrappedComponent={\r\n                  <RecoverPassword recoverPassword={recoverPassword} />\r\n                }\r\n              />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/change-password\"\r\n          render={() => (\r\n            <ChangePassword recoveryChangePassword={recoveryChangePassword} />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) =>\r\n            user?.id ? (\r\n              user?.active ? (\r\n                <Home user={user} logout={logout} />\r\n              ) : (\r\n                <Access\r\n                  WrappedComponent={\r\n                    <EmailVerification\r\n                      user={user}\r\n                      resendVerification={resendVerification}\r\n                    />\r\n                  }\r\n                />\r\n              )\r\n            ) : (\r\n              <Access WrappedComponent={<Login user={user} login={login} />} />\r\n            )\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/home\"\r\n          render={() => <Home user={user} logout={logout} />}\r\n        />\r\n      </Switch>\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default withRouter(Routes);\r\n","import React from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { theme } from \"./themes/theme\";\r\nimport Routes from \"./routes\";\r\nimport axios from \"axios\";\r\n\r\naxios.interceptors.request.use(async function (config) {\r\n  const token = await localStorage.getItem(\"messenger-token\");\r\n  config.headers[\"x-access-token\"] = token;\r\n\r\n  return config;\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <Routes />\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}